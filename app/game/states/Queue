	function disconnected(){
		var playerIndex  = playerById(this.id);
		if(!playerIndex){
			console.log("Player not found  by this id:"+ this.id);
			return; 
		}
		players.splice(players.indexOf(playerIndex),1);
		console.log('this player has been removed: '+ this.id);

	};
	function initPlayer(data){
		console.log('this init');
		this.emit("init:update",{id: this.id, x: data.x, y: data.y, gameid: '' , avatar: data.avatar});
		this.emit("list:game",games);
	};

	function addToGame (data) {
		var player = playerById(data.id);

		if(player.gameid === ''){
			player.gameid = data.gameid;
			this.broadcast.emit("addToGame:player", data)
		}
		console.log('returned value for current player map: '+ player.map);
	};

	function newPlayer (data){
		var player = playerById(data.id);

		if(!player){
			console.log('player is not found with this id: '+this.id);
		}
		if(!data.gameId){
			console.log('game not found under game list');
		}

		var newPlayer = { id: this.id, x: data.x, y: data.y, gameid: data.gameId , avatar: data.avatar};
		this.broadcast.emit("new:player",{id: newPlayer.id, x: newPlayer.x, y: newPlayer.y, gameid: newPlayer.gameId , avatar: newPlayer.avatar});
		

		var existingPlayer;
		for (var i = 0; i < players.length; i++) {
			existingPlayer = players[i];
			this.emit("new:player", {id: existingPlayer.id, x: existingPlayer.x, y: existingPlayer.y,avatar: existingPlayer.avatar});
		};

		// Add new player to the players array if they aren't in players array 
		if(!player)
			players.push(newPlayer);
	};

	function updatePlayer(data){
		//updates players movement and status throughout game. 
		console.log(data.id + ' has been updated : '+ data);
		this.broadcast.emit("update:player",data);
	};
